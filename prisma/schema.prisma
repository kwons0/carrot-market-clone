generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  email       String   @unique
  bio         String?
  avatar      String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  tweets      Tweet[]
  likes       Like[]
  response    Response[]
}

model Tweet {
  id          Int      @id @default(autoincrement())
  tweet       String
  photo       String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  likes       Like[]
  response    Response[]

  @@index([userId])
}

model Like {
  created_at  DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int

  tweet       Tweet   @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId     Int

  @@unique([tweetId, userId])
}

model Response {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  comment     String

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int

  tweet       Tweet   @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId     Int

}

